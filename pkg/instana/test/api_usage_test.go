/*
Introduction to Instana public APIs

Testing UsageApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package instana

import (
	openapiclient "./openapi"
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_instana_UsageApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test UsageApiService GetAllUsage", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.UsageApi.GetAllUsage(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsageApiService GetHostsPerDay", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var day int32
		var month int32
		var year int32

		resp, httpRes, err := apiClient.UsageApi.GetHostsPerDay(context.Background(), day, month, year).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsageApiService GetHostsPerMonth", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var month int32
		var year int32

		resp, httpRes, err := apiClient.UsageApi.GetHostsPerMonth(context.Background(), month, year).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsageApiService GetUsagePerDay", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var day int32
		var month int32
		var year int32

		resp, httpRes, err := apiClient.UsageApi.GetUsagePerDay(context.Background(), day, month, year).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test UsageApiService GetUsagePerMonth", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var month int32
		var year int32

		resp, httpRes, err := apiClient.UsageApi.GetUsagePerMonth(context.Background(), month, year).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
