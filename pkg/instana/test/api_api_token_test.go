/*
Introduction to Instana public APIs

Testing APITokenApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package instana

import (
	openapiclient "./openapi"
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_instana_APITokenApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test APITokenApiService DeleteApiToken", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var internalId string

		resp, httpRes, err := apiClient.APITokenApi.DeleteApiToken(context.Background(), internalId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test APITokenApiService GetApiToken", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var internalId string

		resp, httpRes, err := apiClient.APITokenApi.GetApiToken(context.Background(), internalId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test APITokenApiService GetApiTokens", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.APITokenApi.GetApiTokens(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test APITokenApiService PostApiToken", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.APITokenApi.PostApiToken(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test APITokenApiService PutApiToken", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var internalId string

		resp, httpRes, err := apiClient.APITokenApi.PutApiToken(context.Background(), internalId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
