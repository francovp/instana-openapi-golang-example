/*
Introduction to Instana public APIs

Testing HostAgentApiService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package instana

import (
	openapiclient "./openapi"
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_instana_HostAgentApiService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test HostAgentApiService GetAgentLogs", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var hostId string

		resp, httpRes, err := apiClient.HostAgentApi.GetAgentLogs(context.Background(), hostId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HostAgentApiService GetAgentSnapshot", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var id string

		resp, httpRes, err := apiClient.HostAgentApi.GetAgentSnapshot(context.Background(), id).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HostAgentApiService SearchHostAgents", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.HostAgentApi.SearchHostAgents(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HostAgentApiService UpdateAgent", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var hostId string

		resp, httpRes, err := apiClient.HostAgentApi.UpdateAgent(context.Background(), hostId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HostAgentApiService UpdateConfigurationByHost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var hostId string

		resp, httpRes, err := apiClient.HostAgentApi.UpdateConfigurationByHost(context.Background(), hostId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test HostAgentApiService UpdateConfigurationByQuery", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		resp, httpRes, err := apiClient.HostAgentApi.UpdateConfigurationByQuery(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
